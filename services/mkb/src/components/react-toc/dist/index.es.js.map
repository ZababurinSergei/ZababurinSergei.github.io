{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils.ts","../src/Heading.tsx","../src/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// Replaces all the specified letters.\nconst replaceAll = (retStr: string, customMatchers: CustomMatchers): string => {\n  for (const key in customMatchers) {\n    retStr = retStr.replace(new RegExp(key, 'g'), customMatchers[key])\n  }\n  return retStr\n}\n\n// Removes # and connects each word with '-'.\nconst createLink = (string: string): string => {\n  const shapedString = string.toLowerCase().replace(/^#+\\s/, '').trimRight()\n  const anchor = shapedString.split(' ').join('-')\n  return anchor\n}\n\n// It removes # from the given string. And it shortens the string if its longer than \"stringLimit\".\nconst createTitle = (string: string, stringLimit: number): string => {\n  const rawTitle = string.replace(/^#+\\s/g, '')\n\n  if (rawTitle.length >= stringLimit)\n    return `${rawTitle.slice(0, stringLimit)}..`\n\n  return rawTitle\n}\n\n// It extracts headings from the given markdownText.\nconst extractHeadingsFromMd = (\n  markdownText: string,\n  highestTargetHeadings: number,\n  lowestTargetHeadings: number,\n): RegExpMatchArray | null => {\n  const headingRegex = new RegExp(\n    `^#{${highestTargetHeadings},${lowestTargetHeadings}}\\\\s.+(\\\\n|\\\\r|\\\\r\\\\n)`,\n    'gm',\n  )\n  return markdownText.match(headingRegex)\n}\n\nconst removeCodeBlockFromMd = (markdownText: string): string => {\n  const codeBlockRegex = new RegExp(\n    '((````[a-z]*\\n[\\\\s\\\\S]*?\\n````)|(```[a-z]*\\n[\\\\s\\\\S]*?\\n```)|(~~~[a-z]*\\n[\\\\s\\\\S]*?\\n~~~))',\n    'gms',\n  )\n  return markdownText.replace(codeBlockRegex, '')\n}\n\nexport {\n  replaceAll,\n  createLink,\n  createTitle,\n  extractHeadingsFromMd,\n  removeCodeBlockFromMd,\n}\n","import * as React from 'react'\nimport { replaceAll, createLink, createTitle } from './utils'\n\nexport default class Heading {\n  title: string\n  level: number\n  titleLimit: number\n  customMatchers: CustomMatchers\n\n  constructor(\n    title: string,\n    level: number,\n    titleLimit: number,\n    customMatchers?: CustomMatchers,\n  ) {\n    this.title = title\n    this.level = level\n    this.titleLimit = titleLimit\n    this.customMatchers = customMatchers ? customMatchers : {}\n  }\n\n  generateList(): JSX.Element {\n    const link = createLink(this.title)\n    const listItem = (\n      <li>\n        <a href={`#${replaceAll(link, this.customMatchers)}`}>\n          {createTitle(this.title, this.titleLimit)}\n        </a>\n      </li>\n    )\n\n    return <>{nestUl(this.level, listItem)}</>\n  }\n}\n\n/*\n Create a new heading object from the given string\n*/\nconst newHeading = (\n  headingText: string,\n  titleLimit: number,\n  customMatchers?: CustomMatchers,\n): Heading | null => {\n  const matchedHashes = headingText.match(/^#+/)\n  if (!matchedHashes) return null\n  const headingLevel: number = matchedHashes[0].split('').length\n  const matchers = customMatchers ? customMatchers : {}\n\n  return new Heading(headingText, headingLevel, titleLimit, matchers)\n}\n\n/* \n Return a nested Unordered list based on the given heading level.\n*/\nconst nestUl = (level: number, listItem: React.ReactNode) => {\n  switch (level) {\n    case 1:\n      return listItem\n    case 2:\n      return <ul>{listItem}</ul>\n    case 3:\n      return (\n        <ul>\n          <ul>{listItem}</ul>\n        </ul>\n      )\n    case 4:\n      return (\n        <ul>\n          <ul>\n            <ul>{listItem}</ul>\n          </ul>\n        </ul>\n      )\n    case 5:\n      return (\n        <ul>\n          <ul>\n            <ul>\n              <ul>{listItem}</ul>\n            </ul>\n          </ul>\n        </ul>\n      )\n    case 6:\n      return (\n        <ul>\n          <ul>\n            <ul>\n              <ul>\n                <ul>{listItem}</ul>\n              </ul>\n            </ul>\n          </ul>\n        </ul>\n      )\n    default:\n      return listItem\n  }\n}\n\nexport { newHeading }\n","import * as React from 'react'\nimport styles from './style.module.css'\nimport { extractHeadingsFromMd, removeCodeBlockFromMd } from './utils'\nimport Heading, { newHeading } from './Heading'\n\ntype TocProps = {\n  /*\n    The markdown text you want to creat a TOC from.\n   */\n  markdownText: string\n  /*\n    The maximum length of each title in the TOC.\n  */\n  titleLimit?: number\n  /*\n    The highest level of headings you want to extract from the given markdownText.\n  */\n  highestHeadingLevel?: number\n  /*\n    The lowest level of headings you want to extract from the given markdownText.\n  */\n  lowestHeadingLevel?: number\n  /*\n    The custom className.\n    You can style the TOC like this.\n\n    ```css\n    .customClassName  {\n      border: solid 1px;\n    }\n    .customClassName > li {\n      padding-bottom: 10px;\n    }\n    ```\n  */\n  className?: string\n  /*\n    The type of a TOC you want to use.\n  */\n  type?: 'default' | 'raw' // \"fixed-left\" | \"fixed-right\" | \"material\" | \"bootstrap\"\n  /*\n    The custom options for the anchors\n  */\n  customMatchers?: CustomMatchers\n}\n\nconst Toc = ({\n  markdownText,\n  titleLimit,\n  highestHeadingLevel,\n  lowestHeadingLevel,\n  className,\n  type,\n  customMatchers,\n}: TocProps): JSX.Element | null => {\n  if (!markdownText) return null\n  // Set default values\n  const limit = titleLimit ? titleLimit : 200\n  const defaultClass = type === 'raw' ? '' : 'react-toc'\n  const customClass = className || defaultClass\n  const headingLevels: number[] = [\n    highestHeadingLevel || 1,\n    lowestHeadingLevel || 6,\n  ]\n\n  // Style settings\n  const style: string | undefined = styles[customClass] || className\n\n  // Mutate headings\n  const matchedHeadings: RegExpMatchArray | null = extractHeadingsFromMd(\n    removeCodeBlockFromMd(markdownText),\n    headingLevels[0],\n    headingLevels[1],\n  )\n  const headingObjects = matchedHeadings?.map((heading) =>\n    newHeading(heading, limit, customMatchers),\n  )\n  const headingTags:\n    | JSX.Element[]\n    | undefined = headingObjects?.map((heading: Heading) =>\n    heading.generateList(),\n  )\n\n  if (!headingTags) return null\n\n  return (\n    <ul className={style}>\n      {headingTags.map((heading: JSX.Element, index: number) => (\n        <React.Fragment key={index}>{heading}</React.Fragment>\n      ))}\n    </ul>\n  )\n}\n\nexport default Toc\n"],"names":[],"mappings":"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"}
