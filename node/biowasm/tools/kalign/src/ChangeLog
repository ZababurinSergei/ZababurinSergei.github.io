2021-04-16  Timo Lassmann  <timo.lassmann@telethonkids.org.au>

	* version 3.3.1 - Bug Fix
	The previous version kalign checked the top 50 sequences in inputs to determine
	whether the sequences are aligned or not. If the first 50 sequences are not aligned,
	but following sequences contain gaps (or other characters!) kalign can crash. In this
	version (3.3.1) kalign checks all sequences, thereby avoiding this issue.
	To alert users to the situation described above and to warn users about the presence of
	odd characters, kalign now produces a warning message like this:

	[Date Time] :     LOG : Start io tests.
	[Date Time] :     LOG : reading: dev/data/a2m.good.1
	[Date Time] :     LOG : Detected protein sequences.
	[Date Time] : WARNING : -------------------------------------------- (rwalign.c line 505)
	[Date Time] : WARNING : The input sequences contain gap characters:  (rwalign.c line 506)
	[Date Time] : WARNING : "-" :   36 found                             (rwalign.c line 510)
	[Date Time] : WARNING : BUT the sequences do not seem to be aligned! (rwalign.c line 514)
	[Date Time] : WARNING :                                              (rwalign.c line 515)
	[Date Time] : WARNING : Kalign will remove the gap characters and    (rwalign.c line 516)
	[Date Time] : WARNING : align the sequences.                         (rwalign.c line 517)
	[Date Time] : WARNING : -------------------------------------------- (rwalign.c line 518)

2020-11-06  Timo Lassmann  <timo.lassmann@telethonkids.org.au>

	* version 3.3 - Threading and more
	- Kalign now runs pairwise distance estimation, guide tree building and alignments in parallel.
	- Memory optimisations.
	- Optimised bi-sectional K-means algorithm.
	- added -clean option to check for sequences with identical names but different sequences.
	- fixed minor bug in alignment I/O module



2020-09-24  Timo Lassmann  <timo.lassmann@telethonkids.org.au>

	* version 3.2.7 - Development version
	- dynamic programming in now more modular.
	- fixed rare bug in alignment input / output
	- added gap parameters (--gpo, --gpe, --tgpe)
	- for protein alignment I now use the CorBLOSUM66_13plus matrix from:

	Hess M, Keul F, Goesele M, Hamacher K.
	Addressing inaccuracies in BLOSUM computation improves homology search performance.
	BMC bioinformatics. 2016 Dec 1;17(1):189.

	with the empirically derived gap penalties.

2020-04-22  Timo Lassmann  <timo.lassmann@telethonkids.org.au>

	* version 3.2.5
	- Bug fix: when given long output named the first lines in msf
	output could be truncated.

2020-04-01  Timo Lassmann  <timo.lassmann@telethonkids.org.au>

	* version 3.2.4
	- Fixed issue relating to stdin input on clusters.
	- Added more sanity checks

2020-03-16  Timo Lassmann

	* version 3.2.3
	- replaced timing code with code from the easel lib.

2020-02-23  Timo Lassmann

	* version 3.2.2
	- Fixed minor bug in rwaln test routine. It assumed that input alignments
	were correctly formatted (which was not true for one test case). The
	kalign executable was never affected by this.
	- Added a script to test a few alignments.

2020-02-22 Timo lassmann

	* version 3.2.1

	minor bug fix removed "-lrt" required for old glibc versions and replaced
	with a search in configure.ac: AC_SEARCH_LIBS([clock_gettime],[rt])

2020-02-15 Timo Lassmann

	* version 3.2.0

	Added support for reading sequences from standard input:

	cat file.fasta | kalign -f fasta | ....

	Added support for combining multiple input files into one alignment:

	kalign sequencesA.fa sequencesB.fa > msa.fa

	Also works in combination:

	cat file.fasta | kalign sequencesA.fa sequencesB.fa > msa.fa

	Minor:
	- added m4 macros to enable / disable compiler flags
	- added m4 macro for valgrind. Now there is a make target
	called check-valgrind that run all tests through valgrind.
