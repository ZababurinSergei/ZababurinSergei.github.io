diff --git a/Makefile b/Makefile
index 160314a..6178814 100644
--- a/Makefile
+++ b/Makefile
@@ -140,7 +140,7 @@ libbam.a:$(LOBJS)
 	$(AR) -csru $@ $(LOBJS)
 
 samtools: $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB)
-	$(CC) $(ALL_LDFLAGS) -o $@ $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB_LIB) $(CURSES_LIB) -lm $(ALL_LIBS) -lpthread
+	$(CC) $(ALL_LDFLAGS) -o ../build/$@.js $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB_LIB) $(CURSES_LIB) -lm $(ALL_LIBS) -lpthread
 
 # For building samtools and its test suite only: NOT to be installed.
 libst.a: $(LIBST_OBJS)
diff --git a/bam_sort.c b/bam_sort.c
index 0bf346c..22aff33 100644
--- a/bam_sort.c
+++ b/bam_sort.c
@@ -2027,15 +2027,7 @@ static int sort_blocks(int n_files, size_t k, bam1_tag *buf, const char *prefix,
             w[i].no_save = 0;
         }
         pos += w[i].buf_len; rest -= w[i].buf_len;
-        pthread_create(&tid[i], &attr, worker, &w[i]);
-    }
-    for (i = 0; i < n_threads; ++i) {
-        pthread_join(tid[i], 0);
-        if (w[i].error != 0) {
-            errno = w[i].error;
-            print_error_errno("sort", "failed to create temporary file \"%s.%.4d.bam\"", prefix, w[i].index);
-            n_failed++;
-        }
+        worker(&w[0]);
     }
     free(tid); free(w);
     if (n_failed) return -1;
diff --git a/bamtk.c b/bamtk.c
index a6959f9..5a44af6 100644
--- a/bamtk.c
+++ b/bamtk.c
@@ -161,7 +161,7 @@ int main(int argc, char *argv[])
         argc = 2;
     }
 
-    int ret = 0;
+    int ret = 0; optind = 1; opterr = 1; optopt = 0;
     if (strcmp(argv[1], "view") == 0)           ret = main_samview(argc-1, argv+1);
     else if (strcmp(argv[1], "import") == 0)    ret = main_import(argc-1, argv+1);
     else if (strcmp(argv[1], "mpileup") == 0)   ret = bam_mpileup(argc-1, argv+1);
diff --git a/version.sh b/version.sh
index 5ccd9bb..bb7032a 100755
--- a/version.sh
+++ b/version.sh
@@ -30,7 +30,7 @@ VERSION=1.10
 if [ -e .git ]
 then
     # If we ever get to 10.x this will need to be more liberal
-    VERSION=`git describe --match '[0-9].[0-9]*' --dirty --always`
+    VERSION=`git describe --match '[0-9].[0-9]*' --always`
 fi
 
 echo $VERSION
