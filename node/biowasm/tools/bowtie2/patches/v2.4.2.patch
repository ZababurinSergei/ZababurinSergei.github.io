diff --git a/Makefile b/Makefile
index 890cc3f0..aa6b9028 100644
--- a/Makefile
+++ b/Makefile
@@ -240,6 +240,23 @@ FILE_FLAGS     := -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE
 DEBUG_DEFS     = -DCOMPILER_OPTIONS="\"$(DEBUG_FLAGS) $(CXXFLAGS)\""
 RELEASE_DEFS   = -DCOMPILER_OPTIONS="\"$(RELEASE_FLAGS) $(CXXFLAGS)\""
 
+# if compiling to WebAssembly with Emscripten, overwrite some configs
+ifeq (em++,$(shell basename $(CXX)))
+  BITS := 64
+  # Disable SIMD and use SIMDe to simulate it
+  SSE_FLAG :=
+  CXXFLAGS += -fopenmp-simd
+  CPPFLAGS += -Ithird_party/simde
+  # Remove "-g3" debug flag to reduce .wasm size
+  RELEASE_FLAGS := -O3 $(SSE_FLAG) -funroll-loops
+  # A few more flags
+  FILE_FLAGS += -D__aarch64__ -s TOTAL_MEMORY=100MB
+  # TODO: how would memory-mapped files behave in the browser?
+  BOWTIE_MM :=
+  BOWTIE_SHARED_MEM :=
+endif
+
+
 BOWTIE2_BIN_LIST := bowtie2-build-s \
   bowtie2-build-l \
   bowtie2-align-s \
@@ -380,11 +397,11 @@ bowtie2-build-l-debug: bt2_build.cpp $(SHARED_CPPS) $(HEADERS)
 
 bowtie2-align-s-sanitized bowtie2-align-s: bt2_search.cpp $(SEARCH_CPPS) $(SHARED_CPPS) $(HEADERS) $(SEARCH_FRAGMENTS)
 	$(CXX) $(RELEASE_FLAGS) $(RELEASE_DEFS) $(CXXFLAGS) \
-		$(DEFS) -DBOWTIE2 $(NOASSERT_FLAGS) -Wall \
+		$(DEFS) -DBOWTIE2 $(NOASSERT_FLAGS) -w \
 		$(CPPFLAGS) \
-		-o $@ $< \
+		-o ../build/$@.js $< \
 		$(SHARED_CPPS) $(SEARCH_CPPS_MAIN) \
-		$(LDFLAGS) $(LDLIBS)
+		$(LDFLAGS) $(LDLIBS) $(WASM_FLAGS)
 
 bowtie2-align-l-sanitized bowtie2-align-l: bt2_search.cpp $(SEARCH_CPPS) $(SHARED_CPPS) $(HEADERS) $(SEARCH_FRAGMENTS)
 	$(CXX) $(RELEASE_FLAGS) $(RELEASE_DEFS) $(CXXFLAGS) \
diff --git a/bt2_search.cpp b/bt2_search.cpp
index 48680f8a..94e3fb91 100644
--- a/bt2_search.cpp
+++ b/bt2_search.cpp
@@ -4786,6 +4786,7 @@ static void multiseedSearch(
 				threads.push_back(new tthread::thread(multiseedSearchWorker_2p5, (void*)&tids.back()));
 			} else {
 				threads.push_back(new tthread::thread(multiseedSearchWorker, (void*)&tids.back()));
+				multiseedSearchWorker( (void*)&tids.back() );
 			}
 #endif
 		}
@@ -5144,6 +5145,7 @@ int bowtie(int argc, const char **argv) {
 		// Reset all global state, including getopt state
 		opterr = optind = 1;
 		resetOptions();
+		argstr = "";
 		for(int i = 0; i < argc; i++) {
 			argstr += argv[i];
 			if(i < argc-1) argstr += " ";
