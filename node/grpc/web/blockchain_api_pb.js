/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.zb.node.grpc.ActivationStatusRequest', null, global);
goog.exportSymbol('proto.zb.node.grpc.ActivationStatusResponse', null, global);
goog.exportSymbol('proto.zb.node.grpc.BaseTargetResponse', null, global);
goog.exportSymbol('proto.zb.node.grpc.FeatureActivationStatus', null, global);
goog.exportSymbol('proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus', null, global);
goog.exportSymbol('proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus', null, global);
goog.exportSymbol('proto.zb.node.grpc.ScoreResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zb.node.grpc.ActivationStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zb.node.grpc.ActivationStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.zb.node.grpc.ActivationStatusRequest.displayName = 'proto.zb.node.grpc.ActivationStatusRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zb.node.grpc.ActivationStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zb.node.grpc.ActivationStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zb.node.grpc.ActivationStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ActivationStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zb.node.grpc.ActivationStatusRequest}
 */
proto.zb.node.grpc.ActivationStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zb.node.grpc.ActivationStatusRequest;
  return proto.zb.node.grpc.ActivationStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zb.node.grpc.ActivationStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zb.node.grpc.ActivationStatusRequest}
 */
proto.zb.node.grpc.ActivationStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.ActivationStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zb.node.grpc.ActivationStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zb.node.grpc.ActivationStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ActivationStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 height = 1;
 * @return {number}
 */
proto.zb.node.grpc.ActivationStatusRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.zb.node.grpc.ActivationStatusRequest.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zb.node.grpc.ActivationStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zb.node.grpc.ActivationStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.zb.node.grpc.ActivationStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.zb.node.grpc.ActivationStatusResponse.displayName = 'proto.zb.node.grpc.ActivationStatusResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zb.node.grpc.ActivationStatusResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zb.node.grpc.ActivationStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zb.node.grpc.ActivationStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ActivationStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votingInterval: jspb.Message.getFieldWithDefault(msg, 2, 0),
    votingThreshold: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nextCheck: jspb.Message.getFieldWithDefault(msg, 4, 0),
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.zb.node.grpc.FeatureActivationStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zb.node.grpc.ActivationStatusResponse}
 */
proto.zb.node.grpc.ActivationStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zb.node.grpc.ActivationStatusResponse;
  return proto.zb.node.grpc.ActivationStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zb.node.grpc.ActivationStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zb.node.grpc.ActivationStatusResponse}
 */
proto.zb.node.grpc.ActivationStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVotingInterval(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVotingThreshold(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextCheck(value);
      break;
    case 5:
      var value = new proto.zb.node.grpc.FeatureActivationStatus;
      reader.readMessage(value,proto.zb.node.grpc.FeatureActivationStatus.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zb.node.grpc.ActivationStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zb.node.grpc.ActivationStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ActivationStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotingInterval();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVotingThreshold();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNextCheck();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.zb.node.grpc.FeatureActivationStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 height = 1;
 * @return {number}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.zb.node.grpc.ActivationStatusResponse.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 voting_interval = 2;
 * @return {number}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.getVotingInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.zb.node.grpc.ActivationStatusResponse.prototype.setVotingInterval = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 voting_threshold = 3;
 * @return {number}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.getVotingThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.zb.node.grpc.ActivationStatusResponse.prototype.setVotingThreshold = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 next_check = 4;
 * @return {number}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.getNextCheck = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.zb.node.grpc.ActivationStatusResponse.prototype.setNextCheck = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated FeatureActivationStatus features = 5;
 * @return {!Array<!proto.zb.node.grpc.FeatureActivationStatus>}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.zb.node.grpc.FeatureActivationStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zb.node.grpc.FeatureActivationStatus, 5));
};


/** @param {!Array<!proto.zb.node.grpc.FeatureActivationStatus>} value */
proto.zb.node.grpc.ActivationStatusResponse.prototype.setFeaturesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.zb.node.grpc.FeatureActivationStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zb.node.grpc.FeatureActivationStatus}
 */
proto.zb.node.grpc.ActivationStatusResponse.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.zb.node.grpc.FeatureActivationStatus, opt_index);
};


proto.zb.node.grpc.ActivationStatusResponse.prototype.clearFeaturesList = function() {
  this.setFeaturesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zb.node.grpc.FeatureActivationStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zb.node.grpc.FeatureActivationStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.zb.node.grpc.FeatureActivationStatus.displayName = 'proto.zb.node.grpc.FeatureActivationStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.zb.node.grpc.FeatureActivationStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zb.node.grpc.FeatureActivationStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.FeatureActivationStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    blockchainStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nodeStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    activationHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    supportingBlocks: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zb.node.grpc.FeatureActivationStatus}
 */
proto.zb.node.grpc.FeatureActivationStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zb.node.grpc.FeatureActivationStatus;
  return proto.zb.node.grpc.FeatureActivationStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zb.node.grpc.FeatureActivationStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zb.node.grpc.FeatureActivationStatus}
 */
proto.zb.node.grpc.FeatureActivationStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus} */ (reader.readEnum());
      msg.setBlockchainStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus} */ (reader.readEnum());
      msg.setNodeStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivationHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSupportingBlocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zb.node.grpc.FeatureActivationStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zb.node.grpc.FeatureActivationStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.FeatureActivationStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockchainStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNodeStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getActivationHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSupportingBlocks();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus = {
  UNDEFINED: 0,
  APPROVED: 1,
  ACTIVATED: 2
};

/**
 * @enum {number}
 */
proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus = {
  NOT_IMPLEMENTED: 0,
  IMPLEMENTED: 1,
  VOTED: 2
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BlockchainFeatureStatus blockchain_status = 3;
 * @return {!proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getBlockchainStatus = function() {
  return /** @type {!proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.zb.node.grpc.FeatureActivationStatus.BlockchainFeatureStatus} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setBlockchainStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional NodeFeatureStatus node_status = 4;
 * @return {!proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getNodeStatus = function() {
  return /** @type {!proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.zb.node.grpc.FeatureActivationStatus.NodeFeatureStatus} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setNodeStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 activation_height = 5;
 * @return {number}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getActivationHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setActivationHeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 supporting_blocks = 6;
 * @return {number}
 */
proto.zb.node.grpc.FeatureActivationStatus.prototype.getSupportingBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.zb.node.grpc.FeatureActivationStatus.prototype.setSupportingBlocks = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zb.node.grpc.BaseTargetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zb.node.grpc.BaseTargetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.zb.node.grpc.BaseTargetResponse.displayName = 'proto.zb.node.grpc.BaseTargetResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zb.node.grpc.BaseTargetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zb.node.grpc.BaseTargetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zb.node.grpc.BaseTargetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.BaseTargetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseTarget: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zb.node.grpc.BaseTargetResponse}
 */
proto.zb.node.grpc.BaseTargetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zb.node.grpc.BaseTargetResponse;
  return proto.zb.node.grpc.BaseTargetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zb.node.grpc.BaseTargetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zb.node.grpc.BaseTargetResponse}
 */
proto.zb.node.grpc.BaseTargetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBaseTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.BaseTargetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zb.node.grpc.BaseTargetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zb.node.grpc.BaseTargetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.BaseTargetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseTarget();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 base_target = 1;
 * @return {number}
 */
proto.zb.node.grpc.BaseTargetResponse.prototype.getBaseTarget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.zb.node.grpc.BaseTargetResponse.prototype.setBaseTarget = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zb.node.grpc.ScoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zb.node.grpc.ScoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.zb.node.grpc.ScoreResponse.displayName = 'proto.zb.node.grpc.ScoreResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zb.node.grpc.ScoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zb.node.grpc.ScoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zb.node.grpc.ScoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ScoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    score: msg.getScore_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zb.node.grpc.ScoreResponse}
 */
proto.zb.node.grpc.ScoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zb.node.grpc.ScoreResponse;
  return proto.zb.node.grpc.ScoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zb.node.grpc.ScoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zb.node.grpc.ScoreResponse}
 */
proto.zb.node.grpc.ScoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.ScoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zb.node.grpc.ScoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zb.node.grpc.ScoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zb.node.grpc.ScoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScore_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes score = 1;
 * @return {string}
 */
proto.zb.node.grpc.ScoreResponse.prototype.getScore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes score = 1;
 * This is a type-conversion wrapper around `getScore()`
 * @return {string}
 */
proto.zb.node.grpc.ScoreResponse.prototype.getScore_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScore()));
};


/**
 * optional bytes score = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScore()`
 * @return {!Uint8Array}
 */
proto.zb.node.grpc.ScoreResponse.prototype.getScore_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScore()));
};


/** @param {!(string|Uint8Array)} value */
proto.zb.node.grpc.ScoreResponse.prototype.setScore = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.zb.node.grpc);
