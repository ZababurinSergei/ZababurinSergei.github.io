{
  "name": "welcomebook",
  "version": "1.0.0",
  "description": "",
  "main": "index.mjs",
  "type": "module",
  "scripts": {
    "start": "nodemon --import ./instrumentation.mjs --config nodemon.server.json index.mjs",
    "asbuild:debug": "asc assembly/index.ts --target debug",
    "asbuild:release": "asc assembly/index.ts --target release",
    "asbuild": "npm run asbuild:debug && npm run asbuild:release",
    "build:service": "nodemon --config nodemon.service.json esbuild.config.mjs",
    "px2vw:welcomebook": "gulp px2vw --src ./services/welcomebook/src",
    "vw2px:welcomebook": "gulp vw2px --src ./services/welcomebook/src",
    "px2vw:rules": "gulp px2vw --src ./services/rules/src",
    "vw2px:rules": "gulp vw2px --src ./services/rules/src",
    "px2vw:this": "gulp px2vw --src ./docs",
    "vw2px:this": "gulp vw2px --src ./docs",
    "test": "node tests",
    "================== PM ==================": "",
    "pm2:start": "cd /home/sergei/Desktop/work/Welcomebook/ && pm2 --name welcomebook --namespace work  --attach start index.mjs",
    "pm2:show": "pm2 show welcomebook",
    "pm2:stop": "pm2 stop index.mjs --name welcomebook --namespace work",
    "pm2:restart": "pm2 restart index.mjs --name welcomebook --namespace work",
    "pm2:delete": "pm2 delete index.mjs --name welcomebook --namespace work",
    "pm2:monit": "pm2 monit",
    "pm2:reset_all": "pm2 reset all",
    "pm2:delete_all": "pm2 delete all",
    "pm2 list --sort name:desc": "pm2 list --sort name:desc",
    "pm2:start-eco": "pm2 start --attach ecosystem.config.cjs",
    "pm2:stop-eco": "pm2 stop ecosystem.config.cjs",
    "============ docker ============": "echo 'docker'",
    "docker:prune": "docker system prune",
    "docker:prune:a": "docker system prune -a",
    "docker:ps:list": "docker ps",
    "docker:biowasm:run": "docker run -it -d -p 80:80 -p 7319:7319 --name wasm --volume ${PWD}:/src  emscripten/emsdk:2.0.25",
    "docker:biowasm:stop": "docker container stop wasm",
    "docker:biowasm:start": "docker container start wasm",
    "docker:biowasm:logs": "docker logs -f --until=2s wasm",
    "docker:biowasm:exec": "docker exec -u root -it wasm bash",
    "docker:jaeger": "docker run -d --name jaeger \\\n  -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \\\n  -e COLLECTOR_OTLP_ENABLED=true \\\n  -p 6831:6831/udp \\\n  -p 6832:6832/udp \\\n  -p 5778:5778 \\\n  -p 16686:16686 \\\n  -p 4317:4317 \\\n  -p 4318:4318 \\\n  -p 14250:14250 \\\n  -p 14268:14268 \\\n  -p 14269:14269 \\\n  -p 9411:9411 \\\n  jaegertracing/all-in-one:latest",
    "docker:zipkin": "docker run --rm -d -p 9411:9411 --name zipkin openzipkin/zipkin",
    "docker:dockprom:start": "cd ./metrics/dockprom && ADMIN_USER='admin' ADMIN_PASSWORD='admin' ADMIN_PASSWORD_HASH='$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO' docker-compose up",
    "docker:dockprom:stop": "cd ./metrics/dockprom && ADMIN_USER='admin' ADMIN_PASSWORD='admin' ADMIN_PASSWORD_HASH='$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO' docker-compose stop",
    "docker:dockprom:down": "cd ./metrics/dockprom && ADMIN_USER='admin' ADMIN_PASSWORD='admin' ADMIN_PASSWORD_HASH='$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO' docker-compose down",
    "docker:status": "sudo systemctl status docker",
    "============ nginx ============": "echo ''",
    "nginx:stop": "sudo systemctl stop nginx",
    "nginx:start": "sudo sudo systemctl start nginx",
    "nginx:status": "systemctl status nginx",
    "============ grafana ============": "",
    "grafana:start": "sudo systemctl start grafana-server",
    "grafana:status": "sudo systemctl status grafana-server",
    "grafana:bootloader": "sudo systemctl enable grafana-server",
    "grafana:daemon-reload": "sudo systemctl daemon-reload",
    "grafana:stop": "sudo systemctl stop grafana-server",
    "============== end ==============": ""
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/react": "^18.2.7",
    "@types/react-dom": "^18.2.4",
    "assemblyscript": "^0.27.5",
    "autoprefixer": "^10.4.14",
    "dotenv": "^16.0.3",
    "esbuild": "^0.17.19",
    "esbuild-copy-static-files": "^0.1.0",
    "esbuild-css-modules-plugin": "^2.7.1",
    "esbuild-plugin-path-alias": "^1.0.7",
    "esbuild-plugin-polyfill-node": "^0.3.0",
    "esbuild-sass-plugin": "^2.9.0",
    "fs-extra": "^11.1.1",
    "gulp": "^4.0.2",
    "gulp-postcss": "^9.0.1",
    "nodemon": "^2.0.22",
    "postcss-px-to-viewport": "^1.1.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@opentelemetry/api": "^1.4.1",
    "@opentelemetry/auto-instrumentations-node": "^0.37.0",
    "@opentelemetry/exporter-metrics-otlp-proto": "^0.39.1",
    "@opentelemetry/exporter-trace-otlp-proto": "^0.39.1",
    "@opentelemetry/exporter-zipkin": "^1.13.0",
    "@opentelemetry/instrumentation": "^0.39.1",
    "@opentelemetry/resources": "^1.13.0",
    "@opentelemetry/sdk-metrics": "^1.13.0",
    "@opentelemetry/sdk-node": "^0.39.1",
    "@opentelemetry/sdk-trace-base": "^1.13.0",
    "@opentelemetry/sdk-trace-node": "^1.13.0",
    "@opentelemetry/semantic-conventions": "^1.13.0",
    "apollo-metrics": "^1.0.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "express-enqueue": "^1.0.0",
    "express-http-proxy": "^1.6.3",
    "express-prom-bundle": "^6.6.0",
    "graphql-metrics": "^1.0.2",
    "jira-client": "^8.2.2",
    "pm2": "^5.3.0",
    "prom-client": "^14.2.0"
  }
}
